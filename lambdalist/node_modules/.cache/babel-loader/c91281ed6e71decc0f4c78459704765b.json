{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\Assignments\\\\front-end\\\\lambdalist\\\\src\\\\ToDoListContext.js\";\nimport React, { createContext, useState } from \"react\";\nimport uuid from \"uuid\";\nexport const ToDoListContext = createContext();\n\nconst ToDoListContextProvider = props => {\n  const [todos, setTodos] = useState([]); //edit Todo\n\n  const [editItem, setEditItem] = useState(null); //Add Todo\n\n  const addTodo = title => {\n    setTodos([...todos, {\n      title,\n      id: uuid()\n    }]);\n  }; // Remove todos\n\n\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }; //clearList \n\n\n  const clearList = () => {\n    setTodos([]);\n  };\n\n  const findItem = id => {\n    const item = todos.find(todo => todo.id === id);\n    setEditItem(item);\n  };\n\n  const editTodo = (title, id) => {\n    const newTodos = todos.map(todo => todo.id === id ? {\n      title,\n      id\n    } : todo);\n    console.log(newTodos);\n    setTodos(newTodos);\n    setEditItem(null);\n  };\n\n  return /*#__PURE__*/React.createElement(ToDoListContext.Provider, {\n    value: {\n      todos,\n      addTodo,\n      removeTodo,\n      clearList,\n      findItem,\n      editItem,\n      editTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ToDoListContextProvider;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/ToDoListContext.js"],"names":["React","createContext","useState","uuid","ToDoListContext","ToDoListContextProvider","props","todos","setTodos","editItem","setEditItem","addTodo","title","id","removeTodo","filter","todo","clearList","findItem","item","find","editTodo","newTodos","map","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,OAAO,MAAMC,eAAe,GAAGH,aAAa,EAArC;;AAEP,MAAMI,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADuC,CAKvC;;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC,CANuC,CAQvC;;AACA,QAAMS,OAAO,GAAIC,KAAD,IAAW;AACvBJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEK,MAAAA,KAAF;AAASC,MAAAA,EAAE,EAAEV,IAAI;AAAjB,KAAX,CAAD,CAAR;AACH,GAFD,CATuC,CAavC;;;AACA,QAAMW,UAAU,GAAGD,EAAE,IAAI;AACrBL,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD,CAduC,CAkBvC;;;AACA,QAAMI,SAAS,GAAG,MAAM;AACpBT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMU,QAAQ,GAAGL,EAAE,IAAI;AACnB,UAAMM,IAAI,GAAGZ,KAAK,CAACa,IAAN,CAAWJ,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA/B,CAAb;AAEAH,IAAAA,WAAW,CAACS,IAAD,CAAX;AACH,GAJD;;AAMA,QAAME,QAAQ,GAAG,CAACT,KAAD,EAAQC,EAAR,KAAe;AAC5B,UAAMS,QAAQ,GAAGf,KAAK,CAACgB,GAAN,CAAUP,IAAI,IAAKA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiB;AAAED,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB,GAAiCG,IAApD,CAAjB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAd,IAAAA,QAAQ,CAACc,QAAD,CAAR;AACAZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAPD;;AAUA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAF;AAASI,MAAAA,OAAT;AAAkBG,MAAAA,UAAlB;AAA8BG,MAAAA,SAA9B;AAAyCC,MAAAA,QAAzC;AAAmDT,MAAAA,QAAnD;AAA6DY,MAAAA;AAA7D,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACoB,QADX,CADJ;AAKH,CA5CD;;AA8CA,eAAerB,uBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport uuid from \"uuid\"\r\n\r\n\r\nexport const ToDoListContext = createContext()\r\n\r\nconst ToDoListContextProvider = (props) => {\r\n    const [todos, setTodos] = useState([\r\n\r\n    ])\r\n\r\n    //edit Todo\r\n    const [editItem, setEditItem] = useState(null)\r\n\r\n    //Add Todo\r\n    const addTodo = (title) => {\r\n        setTodos([...todos, { title, id: uuid() }])\r\n    }\r\n\r\n    // Remove todos\r\n    const removeTodo = id => {\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    //clearList \r\n    const clearList = () => {\r\n        setTodos([])\r\n    }\r\n\r\n    const findItem = id => {\r\n        const item = todos.find(todo => todo.id === id)\r\n\r\n        setEditItem(item)\r\n    }\r\n\r\n    const editTodo = (title, id) => {\r\n        const newTodos = todos.map(todo => (todo.id === id ? { title, id } : todo))\r\n\r\n        console.log(newTodos)\r\n\r\n        setTodos(newTodos)\r\n        setEditItem(null)\r\n    }\r\n\r\n\r\n    return (\r\n        <ToDoListContext.Provider value={{ todos, addTodo, removeTodo, clearList, findItem, editItem, editTodo }}>\r\n            {props.children}\r\n        </ToDoListContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ToDoListContextProvider;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import useForm from \"./useForm\";\n// import Validate from \"./Validate\";\n// import axiosWithAuth from \"../utils/axiosWithAuth\"\n// const SignUp = () => {\n//   // const { handleChange, handleSubmit, values, errors } = useForm(\n//   //   submit,\n//   //   Validate\n//   // ); // This deconstructs useForm and passes in the submit function as a callback.\n//   const [signUpInfo, setSignUpInfo] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\"\n//   })\n//   const handleChange = e => {\n//     signUpInfo({ ...signUpInfo, [e.target.name]: e.target.value })\n//   }\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     setSignUpInfo({ ...signUpInfo });\n//     axiosWithAuth()\n//       .post(\"api/auth/register/\", signUpInfo)\n//       .then(res => {\n//         // props.history.push(\"/\")\n//       })\n//       .catch(err => console.log(\"SIGNUP-ERROR:\", err))\n//     function submit() {\n//       axios.post(\"https://lambdawunderlist.herokuapp.com/api/auth/register\", values)\n//         .then(res => {\n//           console.log(\"Success!\", res);\n//         })\n//         .catch(err => {\n//           console.log(err.response);\n//         })\n//     }\n//     return (\n//       <div>\n//         <form onSubmit={handleSubmit} noValidate>\n//           <div>\n//             <label>Username</label>\n//             <div>\n//               <input\n//                 name=\"username\"\n//                 type=\"text\"\n//                 value={values.username}\n//                 onChange={handleChange}\n//               />\n//               {errors.email && <p>{errors.username}</p>}\n//             </div>\n//           </div>\n//           <div>\n//             <label>Email</label>\n//             <div>\n//               <input\n//                 name=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"email\"\n//                 // value={values.email}\n//                 onChange={handleChange}\n//               />\n//               {/* {errors.email && <p>{errors.email}</p>} */}\n//             </div>\n//           </div>\n//           <div>\n//             <label>Password</label>\n//             <div>\n//               <input\n//                 placeholder=\"password\"\n//                 name=\"password\"\n//                 type=\"password\"\n//                 // value={values.password}\n//                 onChange={handleChange}\n//               />\n//               {/* {errors.password && <p>{errors.password}</p>} */}\n//             </div>\n//           </div>\n//           <button type=\"submit\">Sign Up</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// form\n// label / input for email\n// label / input for password\n// signup button\n// handle changes\n// handle submit\n// handle errors\n// show errors if there are errors\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/Components/SignUp.js"],"names":["SignUp"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,eAAeA,MAAf","sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import useForm from \"./useForm\";\n// import Validate from \"./Validate\";\n// import axiosWithAuth from \"../utils/axiosWithAuth\"\n\n\n\n\n\n\n// const SignUp = () => {\n//   // const { handleChange, handleSubmit, values, errors } = useForm(\n//   //   submit,\n//   //   Validate\n//   // ); // This deconstructs useForm and passes in the submit function as a callback.\n\n//   const [signUpInfo, setSignUpInfo] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\"\n//   })\n\n//   const handleChange = e => {\n//     signUpInfo({ ...signUpInfo, [e.target.name]: e.target.value })\n//   }\n\n\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     setSignUpInfo({ ...signUpInfo });\n//     axiosWithAuth()\n//       .post(\"api/auth/register/\", signUpInfo)\n//       .then(res => {\n//         // props.history.push(\"/\")\n//       })\n//       .catch(err => console.log(\"SIGNUP-ERROR:\", err))\n\n//     function submit() {\n//       axios.post(\"https://lambdawunderlist.herokuapp.com/api/auth/register\", values)\n//         .then(res => {\n//           console.log(\"Success!\", res);\n//         })\n//         .catch(err => {\n//           console.log(err.response);\n//         })\n//     }\n\n//     return (\n//       <div>\n//         <form onSubmit={handleSubmit} noValidate>\n//           <div>\n//             <label>Username</label>\n//             <div>\n//               <input\n//                 name=\"username\"\n//                 type=\"text\"\n//                 value={values.username}\n//                 onChange={handleChange}\n//               />\n//               {errors.email && <p>{errors.username}</p>}\n//             </div>\n//           </div>\n//           <div>\n//             <label>Email</label>\n//             <div>\n//               <input\n//                 name=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"email\"\n//                 // value={values.email}\n//                 onChange={handleChange}\n//               />\n//               {/* {errors.email && <p>{errors.email}</p>} */}\n//             </div>\n//           </div>\n//           <div>\n//             <label>Password</label>\n//             <div>\n//               <input\n//                 placeholder=\"password\"\n//                 name=\"password\"\n//                 type=\"password\"\n//                 // value={values.password}\n//                 onChange={handleChange}\n//               />\n//               {/* {errors.password && <p>{errors.password}</p>} */}\n//             </div>\n//           </div>\n//           <button type=\"submit\">Sign Up</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// form\n// label / input for email\n// label / input for password\n// signup button\n\n// handle changes\n// handle submit\n\n// handle errors\n// show errors if there are errors\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}
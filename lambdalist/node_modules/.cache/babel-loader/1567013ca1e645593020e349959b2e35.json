{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, Validate) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(Validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    // This checks to see if there are no errors\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    setValues\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/Components/useForm.js"],"names":["useState","useEffect","useForm","callback","Validate","values","setValues","username","email","password","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","target","name","value","handleSubmit","preventDefault","Object","keys","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE;AAHyB,GAAD,CAApC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMc,YAAY,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACK,cAAN;AACAT,IAAAA,SAAS,CAACP,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAQ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIoB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AACpDT,MAAAA,QAAQ;AACT;AACF,GALQ,EAKN,CAACO,MAAD,CALM,CAAT;AAOA,SAAO;AACLI,IAAAA,YADK;AAELK,IAAAA,YAFK;AAGLd,IAAAA,MAHK;AAILK,IAAAA,MAJK;AAKLJ,IAAAA;AALK,GAAP;AAOD,CApCD;;AAsCA,eAAeJ,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, Validate) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrors(Validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    // This checks to see if there are no errors\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    setValues,\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}
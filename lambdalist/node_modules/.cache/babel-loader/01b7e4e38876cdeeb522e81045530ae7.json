{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\Assignments\\\\front-end\\\\lambdalist\\\\src\\\\ToDoListContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport ToDoList from \"./components/ToDoList\";\nimport { axiosWithAuth } from \"./utils/axiosWithAuth\";\nexport const ToDoListContext = createContext();\n\nconst ToDoListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('todos')) || [];\n  const [todos, setTodos] = useState(initialState);\n  console.log(\"localStorage.getItem(token)\", localStorage.getItem(\"token\")); //edit Todo\n\n  const [editItem, setEditItem] = useState(false);\n  const [todoToEdit, setTodoToEdit] = useState(initialState);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]); //Add Todo\n  // const addTodo = (title) => {\n  //     setTodos([...todos, { title, id: Date.now() }])\n  // }\n  // Remove todos\n\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }; //clearList \n\n\n  const clearList = () => {\n    setTodos([]);\n  };\n\n  const findItem = id => {\n    const item = todos.find(todo => todo.id === id);\n    setEditItem(item);\n  };\n\n  const editTodo = (title, id) => {\n    const newTodos = todos.map(todo => todo.id === id ? {\n      title,\n      id\n    } : todo);\n    console.log(newTodos);\n    setTodos(newTodos);\n    setEditItem(true);\n  };\n\n  return /*#__PURE__*/React.createElement(ToDoListContext.Provider, {\n    value: {\n      todos,\n      setTodos,\n      removeTodo,\n      clearList,\n      findItem,\n      editItem,\n      editTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, props.children, /*#__PURE__*/React.createElement(ToDoList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ToDoListContextProvider;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/ToDoListContext.js"],"names":["React","createContext","useState","useEffect","ToDoList","axiosWithAuth","ToDoListContext","ToDoListContextProvider","props","initialState","JSON","parse","localStorage","getItem","todos","setTodos","console","log","editItem","setEditItem","todoToEdit","setTodoToEdit","setItem","stringify","removeTodo","id","filter","todo","clearList","findItem","item","find","editTodo","title","newTodos","map","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAIA,OAAO,MAAMC,eAAe,GAAGL,aAAa,EAArC;;AAEP,MAAMM,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAAlE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACO,YAAD,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3C,EAHuC,CAKvC;;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAACO,YAAD,CAA5C;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BZ,IAAI,CAACa,SAAL,CAAeT,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAXuC,CAevC;AACA;AACA;AACA;AAEA;;AACA,QAAMU,UAAU,GAAGC,EAAE,IAAI;AACrBV,IAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD,CArBuC,CAyBvC;;;AACA,QAAMG,SAAS,GAAG,MAAM;AACpBb,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMc,QAAQ,GAAGJ,EAAE,IAAI;AACnB,UAAMK,IAAI,GAAGhB,KAAK,CAACiB,IAAN,CAAWJ,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA/B,CAAb;AAEAN,IAAAA,WAAW,CAACW,IAAD,CAAX;AACH,GAJD;;AAMA,QAAME,QAAQ,GAAG,CAACC,KAAD,EAAQR,EAAR,KAAe;AAC5B,UAAMS,QAAQ,GAAGpB,KAAK,CAACqB,GAAN,CAAUR,IAAI,IAAKA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB;AAAEQ,MAAAA,KAAF;AAASR,MAAAA;AAAT,KAAjB,GAAiCE,IAApD,CAAjB;AAEAX,IAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AAEAnB,IAAAA,QAAQ,CAACmB,QAAD,CAAR;AACAf,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAPD;;AAUA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBS,MAAAA,UAAnB;AAA+BI,MAAAA,SAA/B;AAA0CC,MAAAA,QAA1C;AAAoDX,MAAAA,QAApD;AAA8Dc,MAAAA;AAA9D,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,KAAK,CAAC4B,QADX,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CArDD;;AAuDA,eAAe7B,uBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport ToDoList from \"./components/ToDoList\";\nimport { axiosWithAuth } from \"./utils/axiosWithAuth\"\n\n\n\nexport const ToDoListContext = createContext()\n\nconst ToDoListContextProvider = (props) => {\n    const initialState = JSON.parse(localStorage.getItem('todos')) || []\n    const [todos, setTodos] = useState(initialState)\n    console.log(\"localStorage.getItem(token)\", localStorage.getItem(\"token\"))\n\n    //edit Todo\n    const [editItem, setEditItem] = useState(false)\n    const [todoToEdit, setTodoToEdit] = useState(initialState);\n\n\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }, [todos])\n\n    //Add Todo\n    // const addTodo = (title) => {\n    //     setTodos([...todos, { title, id: Date.now() }])\n    // }\n\n    // Remove todos\n    const removeTodo = id => {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    //clearList \n    const clearList = () => {\n        setTodos([])\n    }\n\n    const findItem = id => {\n        const item = todos.find(todo => todo.id === id)\n\n        setEditItem(item)\n    }\n\n    const editTodo = (title, id) => {\n        const newTodos = todos.map(todo => (todo.id === id ? { title, id } : todo))\n\n        console.log(newTodos)\n\n        setTodos(newTodos)\n        setEditItem(true)\n    }\n\n\n    return (\n        <ToDoListContext.Provider value={{ todos, setTodos, removeTodo, clearList, findItem, editItem, editTodo }}>\n            {props.children}\n            <ToDoList />\n\n        </ToDoListContext.Provider>\n    )\n}\n\nexport default ToDoListContextProvider;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\Assignments\\\\front-end\\\\lambdalist\\\\src\\\\components\\\\ToDoForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ToDoListContext } from \"../ToDoListContext\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\nconst ToDoForm = props => {\n  const {\n    addTodo,\n    clearList,\n    editToDo,\n    editItem,\n    todos,\n    setTodos\n  } = useContext(ToDoListContext);\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!editItem) {\n      addTodo(title);\n      setTitle(\"\");\n    } else {\n      editToDo(title, editItem.id);\n    }\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n      console.log(editItem);\n    } else {\n      setTitle(\"\");\n    }\n  }, [editItem]);\n\n  const addItem = e => {\n    axiosWithAuth().post(`/api/lists /${id}`).then(res => {\n      console.log(\"New Todo added - res\", res);\n      setTodos([...todos]);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add Todo...\",\n    value: title,\n    onChange: handleChange,\n    required: true,\n    className: \"Todo-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn add-Todo-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, editItem ? 'Edit Todo' : 'Add Todo'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default ToDoForm;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/components/ToDoForm.js"],"names":["React","useState","useContext","useEffect","ToDoListContext","axiosWithAuth","ToDoForm","props","addTodo","clearList","editToDo","editItem","todos","setTodos","title","setTitle","handleSubmit","e","preventDefault","id","handleChange","target","value","console","log","addItem","post","then","res"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,KAA1C;AAAiDC,IAAAA;AAAjD,MAA8DX,UAAU,CAACE,eAAD,CAA9E;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACP,QAAL,EAAe;AACXH,MAAAA,OAAO,CAACM,KAAD,CAAP;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHL,MAAAA,QAAQ,CAACI,KAAD,EAAQH,QAAQ,CAACQ,EAAjB,CAAR;AACH;AACJ,GARD;;AAUA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBF,IAAAA,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAJ,EAAc;AACVI,MAAAA,QAAQ,CAACJ,QAAQ,CAACG,KAAV,CAAR;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH,KAHD,MAGO;AACHI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAPQ,EAON,CAACJ,QAAD,CAPM,CAAT;;AAUA,QAAMc,OAAO,GAAIR,CAAD,IAAO;AACnBZ,IAAAA,aAAa,GACRqB,IADL,CACW,eAAcP,EAAG,EAD5B,EAEKQ,IAFL,CAEUC,GAAG,IAAI;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCI,GAApC;AACAf,MAAAA,QAAQ,CACJ,CAAC,GAAGD,KAAJ,CADI,CAAR;AAIH,KARL;AASH,GAVD;;AAiBA,sBACI;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,KAAK,EAAEF,KAHX;AAII,IAAA,QAAQ,EAAEM,YAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,SAAS,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,QAAQ,GAAG,WAAH,GAAiB,UAD9B,CADJ,eAII;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEF,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CATJ,CADJ;AAqBH,CAnED;;AAqEA,eAAeH,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { ToDoListContext } from \"../ToDoListContext\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\n\n\nconst ToDoForm = (props) => {\n    const { addTodo, clearList, editToDo, editItem, todos, setTodos } = useContext(ToDoListContext)\n    const [title, setTitle] = useState('')\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!editItem) {\n            addTodo(title)\n            setTitle(\"\")\n        } else {\n            editToDo(title, editItem.id)\n        }\n    }\n\n    const handleChange = e => {\n        setTitle(e.target.value)\n    }\n\n    useEffect(() => {\n        if (editItem) {\n            setTitle(editItem.title)\n            console.log(editItem)\n        } else {\n            setTitle(\"\")\n        }\n    }, [editItem])\n\n\n    const addItem = (e) => {\n        axiosWithAuth()\n            .post(`/api/lists /${id}`)\n            .then(res => {\n                console.log(\"New Todo added - res\", res)\n                setTodos(\n                    [...todos]\n                )\n\n            })\n    }\n\n\n\n\n\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form\">\n            <input\n                type=\"text\"\n                placeholder=\"Add Todo...\"\n                value={title}\n                onChange={handleChange}\n                required\n                className=\"Todo-input\"\n            />\n            <div className=\"buttons\">\n                <button type=\"submit\" className=\"btn add-Todo-btn\">\n                    {editItem ? 'Edit Todo' : 'Add Todo'}\n                </button>\n                <button className=\"btn clear-btn\" onClick={clearList}>\n                    Clear\n        </button>\n            </div>\n        </form>\n    )\n\n}\n\nexport default ToDoForm;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
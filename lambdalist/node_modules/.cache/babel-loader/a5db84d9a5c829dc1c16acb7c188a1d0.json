{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\Assignments\\\\front-end\\\\lambdalist\\\\src\\\\components\\\\ToDoForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ToDoListContext } from \"../ToDoListContext\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\nconst ToDoForm = props => {\n  const {\n    clearList,\n    editToDo,\n    editItem,\n    todos,\n    setTodos\n  } = useContext(ToDoListContext);\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addItem(title);\n    setTitle(\"\");\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  }; // useEffect(() => {\n  //     if (editItem) {\n  //         setTitle(editItem.title)\n  //         console.log(editItem)\n  //     } else {\n  //         setTitle(\"\")\n  //     }\n  // }, [editItem])\n\n\n  const addItem = e => {\n    axiosWithAuth().post(`/api/lists /${todos.id}`).then(res => {\n      console.log(\"New Todo added - res\", res);\n      setTodos([...todos]);\n      props.history.push(\"/protected\");\n    }).catch(err => {\n      console.log(\"COULD NOT ADD NEW TODO - from ToDoForm\", err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add Todo...\",\n    value: title,\n    onChange: handleChange,\n    required: true,\n    className: \"Todo-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addItem,\n    type: \"submit\",\n    className: \"add-Todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Add ITEM\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default ToDoForm;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/components/ToDoForm.js"],"names":["React","useState","useContext","useEffect","ToDoListContext","axiosWithAuth","ToDoForm","props","clearList","editToDo","editItem","todos","setTodos","title","setTitle","handleSubmit","e","preventDefault","addItem","handleChange","target","value","post","id","then","res","console","log","history","push","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA;AAAxC,MAAqDV,UAAU,CAACE,eAAD,CAArE;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMc,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACL,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAND;;AAQA,QAAMK,YAAY,GAAGH,CAAC,IAAI;AACtBF,IAAAA,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACH,GAFD,CAbwB,CAiBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,QAAMH,OAAO,GAAIF,CAAD,IAAO;AACnBX,IAAAA,aAAa,GACRiB,IADL,CACW,eAAcX,KAAK,CAACY,EAAG,EADlC,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACAb,MAAAA,QAAQ,CACJ,CAAC,GAAGD,KAAJ,CADI,CAAR;AAGAJ,MAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACH,KARL,EAQOC,KARP,CAQaC,GAAG,IAAI;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDI,GAAtD;AAEH,KAXL;AAYH,GAbD;;AAoBA,sBACI;AAAM,IAAA,QAAQ,EAAEhB,YAAhB;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,KAAK,EAAEF,KAHX;AAII,IAAA,QAAQ,EAAEM,YAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,SAAS,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,SAAS,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEV,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CATJ,CADJ;AAsBH,CArED;;AAuEA,eAAeF,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { ToDoListContext } from \"../ToDoListContext\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\n\n\nconst ToDoForm = (props) => {\n    const { clearList, editToDo, editItem, todos, setTodos } = useContext(ToDoListContext)\n    const [title, setTitle] = useState('')\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        addItem(title)\n        setTitle(\"\")\n\n    }\n\n    const handleChange = e => {\n        setTitle(e.target.value)\n    }\n\n    // useEffect(() => {\n    //     if (editItem) {\n    //         setTitle(editItem.title)\n    //         console.log(editItem)\n    //     } else {\n    //         setTitle(\"\")\n    //     }\n    // }, [editItem])\n\n\n    const addItem = (e) => {\n        axiosWithAuth()\n            .post(`/api/lists /${todos.id}`)\n            .then(res => {\n                console.log(\"New Todo added - res\", res)\n                setTodos(\n                    [...todos]\n                )\n                props.history.push(\"/protected\")\n            }).catch(err => {\n                console.log(\"COULD NOT ADD NEW TODO - from ToDoForm\", err)\n\n            })\n    }\n\n\n\n\n\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form\">\n            <input\n                type=\"text\"\n                placeholder=\"Add Todo...\"\n                value={title}\n                onChange={handleChange}\n                required\n                className=\"Todo-input\"\n            />\n            <div className=\"buttons\">\n                <button onClick={addItem} type=\"submit\" className=\"add-Todo\" >\n                    {/* {editItem ? 'Edit Todo' : 'Add Todo'} */}\n                    Add ITEM\n                </button>\n                <button className=\"btn clear-btn\" onClick={clearList}>\n                    Clear\n        </button>\n            </div>\n        </form>\n    )\n\n}\n\nexport default ToDoForm;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
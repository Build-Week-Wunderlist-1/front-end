{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\Assignments\\\\front-end\\\\lambdalist\\\\src\\\\ToDoListContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\"; // import uuid from \"uuid\"\n\nexport const ToDoListContext = createContext();\n\nconst ToDoListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('todos')) || [];\n  const [todos, setTodos] = useState(initialState); //edit Todo\n\n  const [editItem, setEditItem] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]); //Add Todo\n\n  const addTodo = title => {\n    setTodos([...todos, {\n      title,\n      id: uuid()\n    }]);\n  }; // Remove todos\n\n\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }; //clearList \n\n\n  const clearList = () => {\n    setTodos([]);\n  };\n\n  const findItem = id => {\n    const item = todos.find(todo => todo.id === id);\n    setEditItem(item);\n  };\n\n  const editTodo = (title, id) => {\n    const newTodos = todos.map(todo => todo.id === id ? {\n      title,\n      id\n    } : todo);\n    console.log(newTodos);\n    setTodos(newTodos);\n    setEditItem(null);\n  };\n\n  return /*#__PURE__*/React.createElement(ToDoListContext.Provider, {\n    value: {\n      todos,\n      setTodos,\n      addTodo,\n      removeTodo,\n      clearList,\n      findItem,\n      editItem,\n      editTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ToDoListContextProvider;","map":{"version":3,"sources":["C:/Users/natal/Documents/Assignments/front-end/lambdalist/src/ToDoListContext.js"],"names":["React","createContext","useState","useEffect","ToDoListContext","ToDoListContextProvider","props","initialState","JSON","parse","localStorage","getItem","todos","setTodos","editItem","setEditItem","setItem","stringify","addTodo","title","id","uuid","removeTodo","filter","todo","clearList","findItem","item","find","editTodo","newTodos","map","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D,C,CACA;;AAGA,OAAO,MAAMC,eAAe,GAAGH,aAAa,EAArC;;AAEP,MAAMI,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAAlE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACK,YAAD,CAAlC,CAFuC,CAIvC;;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeL,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAPuC,CAWvC;;AACA,QAAMM,OAAO,GAAIC,KAAD,IAAW;AACvBN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEO,MAAAA,KAAF;AAASC,MAAAA,EAAE,EAAEC,IAAI;AAAjB,KAAX,CAAD,CAAR;AACH,GAFD,CAZuC,CAgBvC;;;AACA,QAAMC,UAAU,GAAGF,EAAE,IAAI;AACrBP,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD,CAjBuC,CAqBvC;;;AACA,QAAMK,SAAS,GAAG,MAAM;AACpBZ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMa,QAAQ,GAAGN,EAAE,IAAI;AACnB,UAAMO,IAAI,GAAGf,KAAK,CAACgB,IAAN,CAAWJ,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA/B,CAAb;AAEAL,IAAAA,WAAW,CAACY,IAAD,CAAX;AACH,GAJD;;AAMA,QAAME,QAAQ,GAAG,CAACV,KAAD,EAAQC,EAAR,KAAe;AAC5B,UAAMU,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CAAUP,IAAI,IAAKA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiB;AAAED,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB,GAAiCI,IAApD,CAAjB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAjB,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACAf,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAPD;;AAUA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBK,MAAAA,OAAnB;AAA4BI,MAAAA,UAA5B;AAAwCG,MAAAA,SAAxC;AAAmDC,MAAAA,QAAnD;AAA6DZ,MAAAA,QAA7D;AAAuEe,MAAAA;AAAvE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,KAAK,CAAC4B,QADX,CADJ;AAKH,CA/CD;;AAiDA,eAAe7B,uBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n// import uuid from \"uuid\"\r\n\r\n\r\nexport const ToDoListContext = createContext()\r\n\r\nconst ToDoListContextProvider = (props) => {\r\n    const initialState = JSON.parse(localStorage.getItem('todos')) || []\r\n    const [todos, setTodos] = useState(initialState)\r\n\r\n    //edit Todo\r\n    const [editItem, setEditItem] = useState(null)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    //Add Todo\r\n    const addTodo = (title) => {\r\n        setTodos([...todos, { title, id: uuid() }])\r\n    }\r\n\r\n    // Remove todos\r\n    const removeTodo = id => {\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    //clearList \r\n    const clearList = () => {\r\n        setTodos([])\r\n    }\r\n\r\n    const findItem = id => {\r\n        const item = todos.find(todo => todo.id === id)\r\n\r\n        setEditItem(item)\r\n    }\r\n\r\n    const editTodo = (title, id) => {\r\n        const newTodos = todos.map(todo => (todo.id === id ? { title, id } : todo))\r\n\r\n        console.log(newTodos)\r\n\r\n        setTodos(newTodos)\r\n        setEditItem(null)\r\n    }\r\n\r\n\r\n    return (\r\n        <ToDoListContext.Provider value={{ todos, setTodos, addTodo, removeTodo, clearList, findItem, editItem, editTodo }}>\r\n            {props.children}\r\n        </ToDoListContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ToDoListContextProvider;"]},"metadata":{},"sourceType":"module"}